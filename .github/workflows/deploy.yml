name: Deploy Lambda
on:
  workflow_call:
    inputs:
      lambda_function_name:
        type: string
        required: true
      region:
        type: string
        required: true
      ecr_repo_name:
        type: string
        required: true
    secrets:
      aws_access_key_id:
        required: true
      aws_secret_access_key:
        required: true

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.aws_access_key_id }}
        aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
        aws-region: ${{ inputs.region }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build and push the image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ inputs.ecr_repo_name }}
        IMAGE_TAG: latest
      run: |
        docker build -f patent_bot/Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        echo "Pushing image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image_uri::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: Update lambda function
      id: update-lambda
      env:
        FUNCTION_NAME: ${{ inputs.lambda_function_name }}
        IMAGE_URI: ${{ steps.build-image.outputs.image_uri }}
      run: |
        aws lambda update-function-code --function-name $FUNCTION_NAME --image-uri $IMAGE_URI
